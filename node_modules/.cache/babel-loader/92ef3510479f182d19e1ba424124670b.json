{"ast":null,"code":"import _slicedToArray from\"E:/Abderrahim/Cours/React/Papa-React/linkedin-clone-yt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./Feed.css';import CreateIcon from'@material-ui/icons/Create';import InputOption from'./InputOption';import ImageIcon from'@material-ui/icons/Image';import SubscriptionsIcon from'@material-ui/icons/Subscriptions';import EventNoteIcon from'@material-ui/icons/EventNote';import CalendarViewDayIcon from'@material-ui/icons/CalendarViewDay';import Post from'./Post';import{db}from'./firebase';import firebase from'firebase';import{selectUser}from'./features/userSlice';import{useSelector}from'react-redux';import FlipMove from\"react-flip-move\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Feed(){var user=useSelector(selectUser);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];// real time listener to database \nuseEffect(function(){db.collection(\"posts\").orderBy(\"timestamp\",\"desc\").onSnapshot(function(snapshot){return setPosts(snapshot.docs.map(function(doc){return{id:doc.id,data:doc.data()};}));});},[]);var sendPost=function sendPost(e){e.preventDefault();db.collection('posts').add({name:user.displayName,descrption:user.email,message:input,photoUrl:user.photoUrl||\"\",timestamp:firebase.firestore.FieldValue.serverTimestamp()});setInput(\"\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"feed\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"feed__inputContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"feed__input\",children:[/*#__PURE__*/_jsx(CreateIcon,{}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"input\",{value:input,onChange:function onChange(e){return setInput(e.target.value);},type:\"text\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendPost,type:\"submit\",children:\"Send\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"feed__inputOptions\",children:[/*#__PURE__*/_jsx(InputOption,{Icon:ImageIcon,title:\"Photo\",color:\"#7085F9\"}),/*#__PURE__*/_jsx(InputOption,{Icon:SubscriptionsIcon,title:\"Video\",color:\"#E7A33E\"}),/*#__PURE__*/_jsx(InputOption,{Icon:EventNoteIcon,title:\"Event\",color:\"#C0CBCD\"}),/*#__PURE__*/_jsx(InputOption,{Icon:CalendarViewDayIcon,title:\"Write article\",color:\"#7FC15E\"})]})]}),/*#__PURE__*/_jsx(FlipMove,{children:posts.map(function(_ref){var id=_ref.id,_ref$data=_ref.data,name=_ref$data.name,descrption=_ref$data.descrption,message=_ref$data.message,photoUrl=_ref$data.photoUrl;return/*#__PURE__*/_jsx(Post,{name:name,description:descrption,message:message,photoUrl:photoUrl},id);})})]});}export default Feed;","map":{"version":3,"sources":["E:/Abderrahim/Cours/React/Papa-React/linkedin-clone-yt/src/Feed.js"],"names":["React","useState","useEffect","CreateIcon","InputOption","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Post","db","firebase","selectUser","useSelector","FlipMove","Feed","user","posts","setPosts","input","setInput","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","sendPost","e","preventDefault","add","name","displayName","descrption","email","message","photoUrl","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Feed.css';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport InputOption from './InputOption';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport Post from './Post';\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase';\r\nimport { selectUser } from './features/userSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport FlipMove from \"react-flip-move\";\r\nfunction Feed() {\r\n    const user = useSelector(selectUser)\r\n     const [posts, setPosts] = useState([]);\r\n     const [input, setInput] = useState([]);\r\n// real time listener to database \r\n     useEffect(() => {\r\n         db.collection(\"posts\").orderBy(\"timestamp\", \"desc\")\r\n         .onSnapshot(snapshot =>(\r\n            setPosts(snapshot.docs.map((doc) =>(\r\n                {\r\n                   id: doc.id,\r\n                   data:doc.data()\r\n                }\r\n            )))\r\n         )\r\n         );\r\n         \r\n     }, [])\r\n\r\n\r\n     const sendPost = e =>{\r\n     e.preventDefault();\r\n     db.collection('posts').add(\r\n         {\r\n             name: user.displayName,\r\n             descrption:user.email,\r\n             message: input,\r\n             photoUrl: user.photoUrl || \"\",\r\n             timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n         })\r\n         setInput(\"\");   \r\n     }\r\n\r\n    return (\r\n        <div className='feed'>\r\n            <div className='feed__inputContainer'>\r\n             <div className='feed__input'>\r\n              <CreateIcon/>\r\n              <form>\r\n                <input value={input} onChange={e => setInput(e.target.value)} type=\"text\"/>\r\n                <button onClick={sendPost} type='submit'>Send</button>\r\n              </form>\r\n             </div>\r\n             <div className='feed__inputOptions'>\r\n                <InputOption Icon={ImageIcon} title='Photo' color=\"#7085F9\"/>\r\n                <InputOption Icon={SubscriptionsIcon} title='Video' color=\"#E7A33E\"/>\r\n                <InputOption Icon={EventNoteIcon} title='Event' color=\"#C0CBCD\"/>\r\n                <InputOption Icon={CalendarViewDayIcon} title='Write article' color=\"#7FC15E\"/>\r\n\r\n             </div>\r\n            </div>\r\n            {/* Posts */}\r\n            <FlipMove>\r\n            {posts.map(({id, data: {name, descrption, message, photoUrl}}) => (\r\n                <Post\r\n                key= {id}\r\n                name = {name}\r\n                description={descrption}\r\n                message = {message}\r\n                photoUrl = {photoUrl}\r\n                />\r\n            ))}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n"]},"metadata":{},"sourceType":"module"}