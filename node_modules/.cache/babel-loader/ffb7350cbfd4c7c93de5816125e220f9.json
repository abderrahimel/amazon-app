{"ast":null,"code":"var _jsxFileName = \"E:\\\\Abderrahim\\\\Cours\\\\React\\\\Papa-React\\\\linkedin-clone-yt\\\\src\\\\Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Feed.css';\nimport CreateIcon from '@material-ui/icons/Create';\nimport InputOption from './InputOption';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport Post from './Post';\nimport { db } from './firebase';\nimport firebase from 'firebase';\nimport { selectUser } from './features/userSlice';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Feed() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [posts, setPosts] = useState([]);\n  const [input, setInput] = useState([]); // real time listener to database \n\n  useEffect(() => {\n    db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setPosts(snapshot.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }))));\n  }, []);\n\n  const sendPost = e => {\n    e.preventDefault();\n    db.collection('posts').add({\n      name: user.displayName,\n      descrption: \"this is a test\",\n      message: input,\n      photoUrl: '',\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed__inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__input\",\n        children: [/*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendPost,\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__inputOptions\",\n        children: [/*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ImageIcon,\n          title: \"Photo\",\n          color: \"#7085F9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: SubscriptionsIcon,\n          title: \"Video\",\n          color: \"#E7A33E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: EventNoteIcon,\n          title: \"Event\",\n          color: \"#C0CBCD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: CalendarViewDayIcon,\n          title: \"Write article\",\n          color: \"#7FC15E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), posts.map(({\n      id,\n      data: {\n        name,\n        descrption,\n        message,\n        photoUrl\n      }\n    }) => /*#__PURE__*/_jsxDEV(Post, {\n      name: name,\n      description: descrption,\n      message: message,\n      photoUrl: photoUrl\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"AFOnb3AecOZIS/Q2dUoZmxc8JFo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["E:/Abderrahim/Cours/React/Papa-React/linkedin-clone-yt/src/Feed.js"],"names":["React","useState","useEffect","CreateIcon","InputOption","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Post","db","firebase","selectUser","useSelector","Feed","user","posts","setPosts","input","setInput","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","sendPost","e","preventDefault","add","name","displayName","descrption","message","photoUrl","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Feed.css';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport InputOption from './InputOption';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport Post from './Post';\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase';\r\nimport { selectUser } from './features/userSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Feed() {\r\n    const user = useSelector(selectUser)\r\n     const [posts, setPosts] = useState([]);\r\n     const [input, setInput] = useState([]);\r\n// real time listener to database \r\n     useEffect(() => {\r\n         db.collection(\"posts\").orderBy(\"timestamp\", \"desc\")\r\n         .onSnapshot(snapshot =>(\r\n            setPosts(snapshot.docs.map((doc) =>(\r\n                {\r\n                   id: doc.id,\r\n                   data:doc.data()\r\n                }\r\n            )))\r\n         )\r\n         );\r\n         \r\n     }, [])\r\n\r\n\r\n     const sendPost = e =>{\r\n     e.preventDefault();\r\n     db.collection('posts').add(\r\n         {\r\n             name: user.displayName,\r\n             descrption:\"this is a test\",\r\n             message: input,\r\n             photoUrl: '',\r\n             timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n         })\r\n         setInput(\"\");   \r\n     }\r\n\r\n    return (\r\n        <div className='feed'>\r\n            <div className='feed__inputContainer'>\r\n             <div className='feed__input'>\r\n              <CreateIcon/>\r\n              <form>\r\n                <input value={input} onChange={e => setInput(e.target.value)} type=\"text\"/>\r\n                <button onClick={sendPost} type='submit'>Send</button>\r\n              </form>\r\n             </div>\r\n             <div className='feed__inputOptions'>\r\n                <InputOption Icon={ImageIcon} title='Photo' color=\"#7085F9\"/>\r\n                <InputOption Icon={SubscriptionsIcon} title='Video' color=\"#E7A33E\"/>\r\n                <InputOption Icon={EventNoteIcon} title='Event' color=\"#C0CBCD\"/>\r\n                <InputOption Icon={CalendarViewDayIcon} title='Write article' color=\"#7FC15E\"/>\r\n\r\n             </div>\r\n            </div>\r\n            {/* Posts */}\r\n            {posts.map(({id, data: {name, descrption, message, photoUrl}}) => (\r\n                <Post\r\n                key= {id}\r\n                name = {name}\r\n                description={descrption}\r\n                message = {message}\r\n                photoUrl = {photoUrl}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n"]},"metadata":{},"sourceType":"module"}